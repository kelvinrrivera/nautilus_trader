version: '3.5'

services:
  postgres:
    container_name: nautilus-database
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-pass}
      POSTGRES_DATABASE: nautilus
      PGDATA: /data/postgres
    volumes:
      - nautilus-database:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - nautilus-network
    restart: unless-stopped

  pgadmin:
    container_name: nautilus-pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@mail.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT:-5051}:80"
    networks:
      - nautilus-network
    restart: unless-stopped

  redis:
    container_name: nautilus-redis
    image: redis
    ports:
      - 6379:6379
    restart: unless-stopped
    networks:
      - nautilus-network

  app:
    container_name: nautilus-app
    build:
      context: ..
      dockerfile: .docker/Dockerfile
      args:
        - NAUTILUS_VERSION=${NAUTILUS_VERSION:-1.0.0}
    image: nautilus-trader:${NAUTILUS_VERSION:-latest}
    environment:
      NAUTILUS_ENV: ${NAUTILUS_ENV:-production}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: nautilus
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      API_REST_PORT: 8000
      API_WS_PORT: 8001
      JWT_SECRET: ${JWT_SECRET}
    ports:
      - "8000:8000"
      - "8001:8001"
    command: ["sh", "-c", "alembic upgrade head && uvicorn nautilus_trader.api:app --host 0.0.0.0 --port 8000"]
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - nautilus-network
      - nautilus-backend
    restart: unless-stopped
    volumes:
      - nautilus-config:/app/config
      - nautilus-data:/app/data
      - nautilus-logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  nautilus-network:
    driver: bridge
  nautilus-backend:
    internal: true

volumes:
  nautilus-database:
    driver: local
  pgadmin:
    driver: local
  nautilus-config:
  nautilus-data:
  nautilus-logs:
